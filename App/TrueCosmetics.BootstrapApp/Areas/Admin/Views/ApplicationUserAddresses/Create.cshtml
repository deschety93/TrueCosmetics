@model TrueCosmetics.Data.Models.ApplicationUserAddress

@{
    ViewBag.Title = "Създай";
    string returnUrl = ViewBag.returnUrl != null ? ViewBag.returnUrl.ToString() : "";
}

<h2>Създай</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Потребителски адрес</h4>
        <hr />
        @Html.HiddenFor(model => model.ApplicationUserId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("returnUrl", returnUrl)

        <div class="form-group">
            @Html.LabelFor(model => model.Country, "Държава", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, "Град", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, "Адрес", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, "Коментар", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Запази" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Content(returnUrl)" class = "btn btn-default">Назад към таблицата</a>
</div>
